
----------------- Testing Function: Baron ----------------
TEST 1: No estate found, check if player gets an estate card and supply count is correct
Estate card supply before count: 8
Estate card supply after count: 8
Expecting one less card after estate card passed out to player
Test 1 failed

TEST 2: There's an estate card, check to see if player gets coins
Coin count = 3, Expected = 7
Test 2 failed


----------------- Testing Function: Minion ----------------
TEST 1: Player chooses to get two coins, check if correct coins are added
Coin count = 5, Expected = 5
Test 1 passed

TEST 2: Player chooese to redraw. Check to see all other players have four cards
Player 1 card count = 1, Expected = 4
Test 2 failed


----------------- Testing Function: Ambassador ----------------
TEST 1: Player choose more than allowed supply number. Expected to return -1
Choice2 is greater than 2
Test 1 passed

TEST 2: Player choose less than allowed supply number. Expected to return -1
Choice2 is less than 0
Test 2 passed

TEST 3: Player choice1 and handPos are equal. Expected to return -1
Choice1 and handPos should not be equal
Test 3 passed

TEST 4: Check if each other player gained a supply card
Player 1: Before gaining a card count: 0
After gaining a card count: 0
Player 1 should now have one more card
Test 4 failed

TEST 5: Check if trashed cards returned to supply
Returning card for player 0
Test 5 passed

Returning card for player 1
Test 5 passed

Returning card for player 0
Test 5 passed

Returning card for player 1
Test 5 passed


----------------- Testing Function: Tribute ----------------
TEST 1: Check if next player deck count decreased
Player 1 deck count before: 1
Player 1 deck count after: 0
Expecting one card decrease
Test 1 passed

TEST 2: check if next player discard count decreased
Player 1 discard count before: 1
Player 1 discard count after: 0
Expecting one card decrease
Test 2 passed

TEST 3: check if no card to reveal
Player 1 deck count: 0
Player 1 discard count: 0
Expecting no card to reveal
Test 3 passed

TEST 4: there are two cards to reveal
Check if both cards are discarded
Player 1 discard count before: 0
Player 1 discard count after: 1
Expecting two less cards
Test 4 failed


----------------- Testing Function: Mine ----------------
TEST 1: Check if choice1 is less than copper or greater than gold
Choice1 is less than copper
Expecting return value of -1
Test 1 passed

Choice1 is greater than gold
Expecting return value of -1
Test 1 passed

TEST 2: Check if choice2 is less than treasure_map or greater than curse
Choice2 is less than curse
Expecting return value of -1
Test 2 passed

Choice1 is greater than treasure_map
Expecting return value of -1
Test 2 passed

TEST 3: Check if choice1 card plus 3 copper is worth more than choice2 card
Choice1 plus 3 copper is worth more than choice2
Expecting return value of -1
Test 3 passed

TEST 4: Check if one card is discarded
Player 0 card number before discarding trashed card: 0
Player 0 card number after discarding trashed card: 0
Expecting one card less
Test 4 failed


----------------- Testing Function: initializeGame ----------------
TEST 1: Check if we can start the game with one player
Starting the game with one player
Expecting return value of -1
Test 1 passed
TEST 2: Check all kingdom cards are different
Two of the 10 cards are the same
Expecting return value of -1
Test 2 passed
TEST 3: Check proper number of curse cards are passed out with 2, 3 or 4 players
Two player game: 10 curse cards
Test 3 passed
Three player game: 20 curse cards
Test 3 passed
Three player game: 30 curse cards
Test 3 passed
TEST 4: Check proper number of victory cards are passed out with 2 or more than 3 players
Two player game: 
8 estate cards. Expecting 8
Test 4 passed
8 duchy cards. Expecting 8
Test 4 passed
8 province cards. Expecting 8
Test 4 passed
Three player game: 
12 estate cards. Expecting 12
Test 4 passed
12 duchy cards. Expecting 12
Test 4 passed
12 province cards. Expecting 12
Test 4 passed

----------------- Testing Function: shuffle ----------------
TEST 1: Check if shuffle is needed
Set deckCount zero
Expecting return value of -1
Test 1 passed
TEST 2: Check if deck is shuffled
Card shuffled. Cards are now in different order.
Test 2 passed

----------------- Testing Function: endTurn ----------------
TEST 1: Check if current player is changed after endTurn is called
Check current player after calling endTurn
current player before calling endTurn: 0
current player after calling endTurn: 1
Test 1 passed

----------------- Testing Function: getWinners ----------------
TEST 1: Check if correct winner is found
Score for player 0: 2
Score for player 1: 0
Score for player 2: 0
Score for player 3: 73
Player 3 has the highest points
Test 1 passed

----------------- Testing Function: drawCard ----------------
TEST 1: When there are still cards in deck, 
check if player card counts are still accuate after draw cards
deckCount before drawCard: 12. DeckCount after drawCard: 11.
deckCount expecting one less
Test 1 passed
handCount before drawCard: 5. handCount after drawCard: 6.
handCount expecting one more
Test 1 passed
discardCount before drawCard: 0. discardCount after drawCard: 0.
discardCount remain the same
Test 1 passed
TEST 2: When there no cards in deck, 
check if player card counts are still accuate after draw cards
deckCount before drawCard: 0. DeckCount after drawCard: 11.
deckCount expecting to be one less than the same as discard count before draw card
Test 2 passed
handCount before drawCard: 5. handCount after drawCard: 6.
handCount expecting one more
Test 2 passed
discardCount before drawCard: 12. discardCount after drawCard: 0.
discardCount should be zero
Test 2 passed
Function 'updateCoins'
Lines executed:81.82% of 11
Branches executed:100.00% of 8
Taken at least once:75.00% of 8
No calls

Function 'gainCard'
Lines executed:61.54% of 13
Branches executed:100.00% of 6
Taken at least once:50.00% of 6
Calls executed:100.00% of 1

Function 'discardCard'
Lines executed:92.31% of 13
Branches executed:100.00% of 6
Taken at least once:83.33% of 6
No calls

Function 'minionAction'
Lines executed:100.00% of 17
Branches executed:100.00% of 18
Taken at least once:88.89% of 18
Calls executed:100.00% of 5

Function 'baronAction'
Lines executed:37.93% of 29
Branches executed:44.44% of 18
Taken at least once:27.78% of 18
Calls executed:37.50% of 8

Function 'ambassadorAction'
Lines executed:95.45% of 22
Branches executed:92.31% of 26
Taken at least once:73.08% of 26
Calls executed:100.00% of 3

Function 'giveCardToPlayer'
Lines executed:85.71% of 7
Branches executed:100.00% of 16
Taken at least once:56.25% of 16
Calls executed:0.00% of 1

Function 'setCard'
Lines executed:100.00% of 5
No branches
No calls

Function 'tributeAction'
Lines executed:100.00% of 26
Branches executed:100.00% of 12
Taken at least once:91.67% of 12
Calls executed:100.00% of 5

Function 'mineAction'
Lines executed:50.00% of 14
Branches executed:71.43% of 14
Taken at least once:42.86% of 14
Calls executed:40.00% of 5

Function 'cardEffect'
Lines executed:0.00% of 148
Branches executed:0.00% of 93
Taken at least once:0.00% of 93
Calls executed:0.00% of 44

Function 'getCost'
Lines executed:10.53% of 57
Branches executed:100.00% of 28
Taken at least once:7.14% of 28
No calls

Function 'drawCard'
Lines executed:100.00% of 22
Branches executed:100.00% of 6
Taken at least once:100.00% of 6
Calls executed:100.00% of 1

Function 'getWinners'
Lines executed:95.83% of 24
Branches executed:100.00% of 22
Taken at least once:90.91% of 22
Calls executed:100.00% of 2

Function 'scoreFor'
Lines executed:100.00% of 24
Branches executed:100.00% of 42
Taken at least once:64.29% of 42
Calls executed:0.00% of 3

Function 'isGameOver'
Lines executed:0.00% of 10
Branches executed:0.00% of 8
Taken at least once:0.00% of 8
No calls

Function 'endTurn'
Lines executed:95.00% of 20
Branches executed:100.00% of 6
Taken at least once:83.33% of 6
Calls executed:100.00% of 3

Function 'whoseTurn'
Lines executed:100.00% of 2
No branches
No calls

Function 'fullDeckCount'
Lines executed:0.00% of 9
Branches executed:0.00% of 12
Taken at least once:0.00% of 12
No calls

Function 'supplyCount'
Lines executed:100.00% of 2
No branches
No calls

Function 'handCard'
Lines executed:0.00% of 3
No branches
Calls executed:0.00% of 1

Function 'numHandCards'
Lines executed:100.00% of 2
No branches
Calls executed:100.00% of 1

Function 'buyCard'
Lines executed:0.00% of 13
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 4

Function 'playCard'
Lines executed:0.00% of 14
Branches executed:0.00% of 10
Taken at least once:0.00% of 10
Calls executed:0.00% of 3

Function 'shuffle'
Lines executed:100.00% of 16
Branches executed:100.00% of 8
Taken at least once:100.00% of 8
Calls executed:100.00% of 2

Function 'initializeGame'
Lines executed:91.94% of 62
Branches executed:95.65% of 46
Taken at least once:84.78% of 46
Calls executed:100.00% of 5

Function 'kingdomCards'
Lines executed:0.00% of 13
No branches
No calls

Function 'newGame'
Lines executed:0.00% of 3
No branches
No calls

Function 'compare'
Lines executed:83.33% of 6
Branches executed:100.00% of 4
Taken at least once:75.00% of 4
No calls

File 'dominion.c'
Lines executed:49.42% of 607
Branches executed:64.58% of 415
Taken at least once:45.78% of 415
Calls executed:34.02% of 97
Creating 'dominion.c.gcov'

